{"version":3,"sources":["About.js","Nav.js","Landing.js","Project.js","Projects.js","AudioTrack.js","AudioPlayer.js","Music.js","App.js","index.js"],"names":["About","className","Nav","setTheme","setCurrentLink","activeLink","isDarkMode","useEffect","onClick","to","undefined","target","rel","href","Landing","console","log","src","alt","Project","data","image","name","description","madeWith","github","live","Projects","projects","map","project","key","id","AudioTrack","song","selectSong","currentSong","title","songsrc","img","AudioPlayer","songs","tracks","useState","isPlaying","setIsPlaying","setCurrentSong","volume","setVolume","audioPlayer","useRef","e","songTitle","getAttribute","find","pauseAudio","loadAudio","playAudio","nextSong","currentIndex","findIndex","current","play","pause","load","onTimeUpdate","progress","Math","round","currentTime","duration","document","getElementById","style","width","onEnded","ref","barWidth","getBoundingClientRect","x","clientX","left","trackDuration","percentageofTrack","length","type","min","max","step","value","onChange","Music","App","setIsDarkMode","setActiveLink","window","location","hash","updatePageTitle","titleStart","substring","charAt","toUpperCase","slice","matchMedia","matches","getElementsByTagName","classList","add","remove","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.4fa23a4d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className='container about'>\r\n      <h1>About me</h1>\r\n      <p>My name is Alice Fritz. I'm currently studying my final year at the Wev Development program at the University of Sk√∂vde. \r\n      I have previously studied Game Development (specialized towards Game Music) and worked in an industrial setting before settling with Web Development as the thing I'd like to do in the foreseeable future.</p>\r\n      <p>I'm currently living in Sk√∂vde, Sweden as I finish my studies in late May/early June. After my final exam I am looking to relocate to Helsinki, Finland. </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Nav( {setTheme, setCurrentLink, activeLink, isDarkMode }) {\r\n\r\n  useEffect(() => {\r\n    setCurrentLink();\r\n    setTheme();\r\n  }, [setCurrentLink, setTheme])\r\n\r\n  return (\r\n    <>\r\n    <div className={isDarkMode ? 'toggleThemeButton invert' : 'toggleThemeButton'} onClick={setTheme}>{isDarkMode ? 'üåô' : '‚òÄÔ∏è'}</div>\r\n    <nav className='navbar'>\r\n      <div className='nav-links'>\r\n        <Link to='/' className={activeLink === '#/' ? 'nav-link-active' : undefined} onClick={setCurrentLink}>HOME</Link>\r\n        <Link to='/projects' className={activeLink === '#/projects' ? 'nav-link-active' : undefined} onClick={setCurrentLink}>PROJECTS</Link>\r\n        {/*<Link to='/contact' className={activeLink === '#/contact' ? 'nav-link-active' : undefined} onClick={setCurrentLink}>CONTACT</Link>*/}\r\n        <Link to='/about' className={activeLink === '#/about' ? 'nav-link-active' : undefined} onClick={setCurrentLink}>ABOUT</Link>\r\n        <Link to='/music' className={activeLink === '#/music' ? 'nav-link-active' : undefined} onClick={setCurrentLink}>MUSIC</Link>\r\n\r\n        \r\n        \r\n      </div>\r\n    </nav>\r\n    <div className=\"nav-contact-links\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/alicefritz\">\r\n          <i className=\"fab fa-2x fa-github\"></i>\r\n        </a>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/alice-fritz-9551b8147/\">\r\n          <i className=\"fab fa-2x fa-linkedin-in\"></i>\r\n        </a>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Landing( {isDarkMode, setCurrentLink}) {\r\n  console.log(`darkmode on? ${isDarkMode}`)\r\n  return (\r\n    <div className='container landing'>\r\n      <div className='landing-img'>\r\n        <img className={isDarkMode === true ? 'invert' : undefined} src='./images/teemu-paananen-OOE4xAnBhKo-unsplash.jpg' alt='fern'></img>\r\n      </div>\r\n      <div className=\"landing-intro\">\r\n        <h1>Alice Fritz</h1>\r\n        <h2>Front End Developer</h2>\r\n        \r\n        <Link to='/projects' onClick={setCurrentLink}>\r\n          <button className=\"projectButton\">Projects</button>\r\n        </Link>\r\n       \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Project( { data, isDarkMode }) {\r\n\r\n  return (\r\n    <div className='project-preview'>\r\n      <div className=\"project-image\">\r\n        <img alt='project' className={isDarkMode ? 'invert' : undefined} src={data.image ? data.image : \"https://source.unsplash.com/random\"}></img>\r\n      </div>\r\n      <div className=\"info\">\r\n        <h2>{data.name}</h2>\r\n        <p>{data.description}</p>\r\n        <div className={isDarkMode ? 'divider invert' : 'divider'}>\r\n          <div className=\"made-with\">\r\n            <p>{data.madeWith}</p>\r\n          </div>\r\n          <div className=\"links\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={data.github}>\r\n              <i className=\"fab fa-2x fa-github\"></i>\r\n            </a>\r\n            {data.live ? <a target=\"_blank\" rel=\"noopener noreferrer\" href={data.live}>Live</a> : <p>Not live</p>}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport projects from './json-files/projects.json';\r\nimport Project from './Project';\r\n\r\nexport default function Projects({isDarkMode}) {\r\n  return (\r\n    <div className='container'>\r\n      <div className='projects'>\r\n        {projects.map( project =>{\r\n          return <Project key={project.id} data={project} isDarkMode={isDarkMode}></Project>\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AudioTrack({song, selectSong, currentSong}) {\r\n\r\n  return (\r\n    <div onClick={selectSong} className={currentSong.title === song.title ? 'audiotrack currentlyPlaying' : 'audiotrack'} song={song} songsrc={song.src} title={song.title} img={song.img}>\r\n      {song.title}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useState, useRef } from 'react';\r\nimport AudioTrack from './AudioTrack';\r\nimport tracks from './json-files/songs.json';\r\n\r\nexport default function AudioPlayer({ isDarkMode }) {\r\n\r\n  const songs = tracks;\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [volume, setVolume] = useState(0.5);\r\n\r\n  let audioPlayer = useRef();\r\n\r\n  const selectSong = (e) => {\r\n    const songTitle = e.target.getAttribute('title');\r\n    const song = songs.find(song => song.title === songTitle)\r\n    pauseAudio();\r\n    console.log(songs)\r\n    setCurrentSong(song)\r\n    loadAudio();\r\n    playAudio();\r\n  }\r\n\r\n  const previousSong = () => {\r\n    let currentIndex = songs.findIndex(song => song.title === currentSong.title);\r\n    if(songs[currentIndex-1] === undefined){\r\n      currentIndex = songs.length;\r\n    }\r\n    pauseAudio();\r\n    setCurrentSong(songs[currentIndex-1])\r\n    loadAudio();\r\n    playAudio();\r\n  }\r\n\r\n  const nextSong = () => {\r\n    let currentIndex = songs.findIndex(song => song.title === currentSong.title);\r\n    if(songs[currentIndex+1] === undefined){\r\n      currentIndex = -1;\r\n    }\r\n    pauseAudio();\r\n    setCurrentSong(songs[currentIndex+1])\r\n    loadAudio();\r\n    playAudio();\r\n  }\r\n\r\n  const playAudio = () => {\r\n    audioPlayer.current.play();\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  const pauseAudio = () => {\r\n    audioPlayer.current.pause();\r\n    setIsPlaying(false);\r\n  }\r\n\r\n  const loadAudio = () => {\r\n    audioPlayer.current.load();\r\n  }\r\n\r\n  const handleProgress = () => {\r\n    const roundedCurrentTime = Math.round(audioPlayer.current.currentTime);\r\n    const trackDuration = audioPlayer.current.duration;\r\n    const progress = roundedCurrentTime / trackDuration;\r\n    document.getElementById('trackprogressbar').style.width = progress * 100 + '%';\r\n  }\r\n\r\n  const progressScroll = (e) => {\r\n    const barWidth = e.target.getBoundingClientRect().width;\r\n    const x = e.clientX - e.target.getBoundingClientRect().left; \r\n    const trackDuration = audioPlayer.current.duration;\r\n    const progress = barWidth - (barWidth - x);\r\n    const percentageofTrack = progress / barWidth;\r\n    audioPlayer.current.currentTime = percentageofTrack * trackDuration;\r\n  }\r\n\r\n  const updateVolume = (e) => {\r\n    setVolume(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    audioPlayer.current.volume = volume;\r\n    console.log(currentSong)\r\n  }, [volume])\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <audio volume={volume} id='audioplayer' onTimeUpdate={handleProgress} onEnded={nextSong} ref={audioPlayer}>\r\n        <source src={currentSong.src}/> \r\n      </audio>\r\n      <div className='audioplayer'>\r\n        <div className='playlistartcontainer'>\r\n          <div className=\"playlist\">\r\n            {songs.map(song => {\r\n              return <AudioTrack key={song.id} song={song} img={song.img} songsrc={song.src} selectSong={selectSong} currentSong={currentSong}/>\r\n            })}\r\n          </div>\r\n          <div className=\"albumart\">\r\n          <img alt='album art' className={isDarkMode === true ? 'invert' : undefined} src={currentSong.img}></img>\r\n          </div>\r\n        </div>\r\n        <div className='musicnavigator' onClick={progressScroll}>\r\n          <div id='trackprogressbar'></div>\r\n        </div>\r\n        <div className=\"controls\">\r\n          <button onClick={previousSong} className=\"controlsbutton\" id='previous'><i className=\"fas fa-3x fa-backward centerprevious\"></i></button>\r\n          <button onClick={() => {isPlaying ? pauseAudio() : playAudio()}} className=\"controlsbutton\" id='playpause'><i className={ isPlaying ? 'fas fa-4x fa-pause' : 'fas fa-4x fa-play centerplay' }></i></button>\r\n          <button onClick={nextSong} className=\"controlsbutton\" id='next'><i className=\"fas fa-3x fa-forward centernext\"></i></button>\r\n        </div>\r\n        <div className=\"volume\">\r\n          <i className=\"fas fa-volume-off\"></i>\r\n          <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={volume} className=\"volumeslider\"onChange={updateVolume}/>\r\n          <i className=\"fas fa-volume-up\"></i>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport AudioPlayer from './AudioPlayer'\r\n\r\nexport default function Music({ isDarkMode }) {\r\n  return (\r\n    <div className='container'>\r\n      <AudioPlayer isDarkMode={isDarkMode}/>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { HashRouter as Router, Route} from 'react-router-dom';\r\nimport About from './About';\r\nimport Nav from './Nav';\r\nimport Landing from './Landing';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\nimport Music from './Music';\r\nimport './style.css';\r\n\r\nexport default function App() {\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const [activeLink, setActiveLink] = useState('');\r\n\r\n  const setTheme = (e) => {\r\n    \r\n    if(e){\r\n      setIsDarkMode(!isDarkMode);\r\n    }else{\r\n      if((window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches)){\r\n        setIsDarkMode(true)\r\n        \r\n      }\r\n    }\r\n    isDarkMode ? document.getElementsByTagName('html')[0].classList.add('dark-mode') : document.getElementsByTagName('html')[0].classList.remove('dark-mode')\r\n  } \r\n\r\n  \r\n  const setCurrentLink = (e) => {\r\n    if(e){\r\n      setActiveLink(e.target.getAttribute('href'));\r\n    }else{\r\n      setActiveLink(window.location.hash);\r\n    }\r\n    updatePageTitle();\r\n  }\r\n\r\n  const updatePageTitle = () => {\r\n    const titleEnd = ' - Alice Fritz';\r\n    let titleStart = activeLink && activeLink.substring(2);\r\n    let title;\r\n    if(!titleStart){\r\n      titleStart = 'home';\r\n    }\r\n    titleStart = titleStart.charAt(0).toUpperCase() + titleStart.slice(1);\r\n    title = titleStart + titleEnd;\r\n    document.title = title;\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <Router>\r\n        <Nav setTheme={setTheme} setCurrentLink={setCurrentLink} activeLink={activeLink} isDarkMode={isDarkMode}/>\r\n        <Route exact path='/'>\r\n          <Landing isDarkMode={isDarkMode} setCurrentLink={setCurrentLink} activeLink={activeLink}/>\r\n        </Route>\r\n        <Route exact path='/about'>\r\n          <About isDarkMode={isDarkMode} setCurrentLink={setCurrentLink} activeLink={activeLink}/>\r\n        </Route>\r\n        <Route exact path='/projects'>\r\n          <Projects isDarkMode={isDarkMode} setCurrentLink={setCurrentLink} activeLink={activeLink}/>\r\n        </Route>\r\n        <Route exact path='/music'>\r\n          <Music isDarkMode={isDarkMode} setCurrentLink={setCurrentLink} activeLink={activeLink}/>\r\n        </Route>\r\n        {/*<Route exact path='/contact'>\r\n          <Contact isDarkMode={isDarkMode} setCurrentLink={setCurrentLink} activeLink={activeLink}/>\r\n        </Route>*/}\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App></App>\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}